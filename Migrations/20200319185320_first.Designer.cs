// <auto-generated />
using System;
using BerrasBiograf;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BerrasBiograf.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20200319185320_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BerrasBiograf.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BookedViewingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<byte>("NumberOfBookedSeats")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("TimeOfBooking")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BookedViewingId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BerrasBiograf.Cinema", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");
                });

            modelBuilder.Entity("BerrasBiograf.Locale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CinemaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocaleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("Locales");
                });

            modelBuilder.Entity("BerrasBiograf.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CinemaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<float>("Length")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("BerrasBiograf.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BerrasBiograf.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BerrasBiograf.Viewing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<Guid?>("LocaleToShowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MovieToShowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeOfScreening")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LocaleToShowId");

                    b.HasIndex("MovieToShowId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Viewings");
                });

            modelBuilder.Entity("BerrasBiograf.Booking", b =>
                {
                    b.HasOne("BerrasBiograf.Viewing", "BookedViewing")
                        .WithMany()
                        .HasForeignKey("BookedViewingId");

                    b.HasOne("BerrasBiograf.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BerrasBiograf.Locale", b =>
                {
                    b.HasOne("BerrasBiograf.Cinema", null)
                        .WithMany("Locales")
                        .HasForeignKey("CinemaId");
                });

            modelBuilder.Entity("BerrasBiograf.Movie", b =>
                {
                    b.HasOne("BerrasBiograf.Cinema", null)
                        .WithMany("Movies")
                        .HasForeignKey("CinemaId");
                });

            modelBuilder.Entity("BerrasBiograf.Viewing", b =>
                {
                    b.HasOne("BerrasBiograf.Locale", "LocaleToShow")
                        .WithMany("Viewings")
                        .HasForeignKey("LocaleToShowId");

                    b.HasOne("BerrasBiograf.Movie", "MovieToShow")
                        .WithMany()
                        .HasForeignKey("MovieToShowId");

                    b.HasOne("BerrasBiograf.Schedule", null)
                        .WithMany("Viewings")
                        .HasForeignKey("ScheduleId");
                });
#pragma warning restore 612, 618
        }
    }
}
